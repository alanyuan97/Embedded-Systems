<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<style>
#messages
{
background-color:yellow;
font-size:4;
font-weight:bold;
line-height:340%;
}
#status
{
background-color:blue;
font-size:4;
font-weight:bold;
color:white;
line-height:340%;
}


</style>
  <head>
    <title>Websockets Using JavaScript MQTT Client</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script>
 	<script type = "text/javascript"
         src = "https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script type = "text/javascript">


	function onConnectionLost(){
	console.log("connection lost");
	document.getElementById("status").innerHTML = "Connection Lost";
	document.getElementById("messages").innerHTML ="Connection Lost";
	connected_flag=0;
	}
	function onFailure(message) {
		console.log("Failed");
		document.getElementById("messages").innerHTML = "Connection Failed- Retrying";
        setTimeout(MQTTconnect, reconnectTimeout);
        }
		function onMessageArrived(r_message){
      // Evaluate if data input is matched with what we expect and print corrsponding output
      if (r_message.payloadString.trim() === '"good"'.trim()){
        out_msg="This apple is good 🌞 🌞 🌞"+"<br>";
        //changeHeadingBg('green');
      }

      else if (r_message.payloadString.trim() === '"bad"'.trim()){
        out_msg="This Apple is bad 🌚 🌚 🌚"+"<br>";
        //changeHeadingBg('red');
      }

      else{
        out_msg="Please wait while sensor scanning 📸 📸 📸"+"<br>";
        console.log(r_message.payloadString.trim());
        console.log('"good"'.trim());
        console.log(typeof r_message.payloadString);
        console.log(typeof "good");



    }


		console.log(out_msg);
		document.getElementById("messages").innerHTML =out_msg;
		}
	function onConnected(recon,url){
	console.log(" in onConnected " +reconn);
	}

	function onConnect() {
	  // Automatically subscribe to topic specified
	document.getElementById("messages").innerHTML ="Welcome! Please enter your employee number for verification purpose "; //print on screen
	connected_flag=1
	document.getElementById("status").innerHTML = "Connected";
	console.log("on Connect "+connected_flag);

	mqtt.subscribe("IC.embedded/FatDuck/#");

	  }

  function MQTTconnect() {
  console.log("connecting to "+ host +" "+ port);

	mqtt = new Paho.MQTT.Client(host,port,"fat duck");

	//document.write("connecting to "+ host);

  //call back functions are below.
	var options = {
        timeout: 3,
		onSuccess: onConnect,
		onFailure: onFailure,

     };

  mqtt.onConnectionLost = onConnectionLost;
  mqtt.onMessageArrived = onMessageArrived;
  mqtt.onConnected = onConnected;
  mqtt.connect(options);
	return false;


	}

	function send_message(){
    console.log("inside send");
		document.getElementById("messages").innerHTML ="";
		if (connected_flag==0){
		out_msg="<b>Not Connected so can't send</b>"
		console.log(out_msg);
		document.getElementById("messages").innerHTML = out_msg;
		return false;
		}

  }


    </script>

  </head>
  <body>
    <h1><center>🍎🍎🍎 Apple Pro Real-time Data Display 🍎🍎🍎<center></h1>

	    <script type = "text/javascript">

</script>
	<script>
  // where programame starts
	var connected_flag=0
	var mqtt;
  var reconnectTimeout = 2000;
	var host="test.mosquitto.org";
	var port=8080;
  MQTTconnect();


// below are forms that can be triggered when certain actions are performed
	</script>

<div id="status">Connection Status: Not Connected</div>
</div>
<br>
	 <form name="connform" action="" onsubmit="">

Employee Number:  <input type="text" name="server"><br><br>
Password: <input type="text" name="server"><br><br>
<input type="submit" value="Login">
</form>

<hr>
  <form name="smessage" action="" onsubmit="return send_message()">
Aditional Comment: <input type="text" name="message"><br><br>
Related Area:   <input type="text" name="Ptopic"><br><br>
<input type="submit" value="Submit">
</form>
<br>
Messages:<p id="messages"></p>

  </body>
</html>

<center>Thank you for choosing Apple Pro. We are the next generation IoT product to boost producivity 🐂 🍺<center>
